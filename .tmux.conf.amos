set -s history-limit 10000
set -s set-titles off
set -s mouse on
set -s mode-keys vi
set -s status-interval 1
set -s repeat-time 600
set -s renumber-windows on
set -s display-panes-time 800
set -s display-time 1000
set -s monitor-activity on
set -s visual-activity off
set -s pane-border-status top
set -s pane-border-format "#[bold,fg=#000000,bg=#00afff]#{pane_current_path}"

set -s prefix C-x
set -s prefix2 C-x
bind 1 resize-pane -Z
bind 2 split-window -v -c '#{pane_current_path}'
bind 3 split-window -h -c '#{pane_current_path}'
bind C-x send-prefix
bind s set synchronize-panes
bind C-c detach-client
bind C-f command-prompt -p find-session 'switch-client -t %%'
bind r source-file ~/.tmux/.tmux.conf.amos \; display '~/.tmux/.tmux.conf.amos sourced'

bind -Tcopy-mode-vi Escape send -X copy-selection-and-cancel
unbind -Tcopy-mode-vi MouseDragEnd1Pane
bind -Tcopy-mode-vi TripleClick1Pane send -X select-line

# need to add all needed root table's key bindings
set -s key-table amos
bind-key -T amos DoubleClick1Pane copy-mode\; send -X select-word
bind-key -T amos M-1 select-window -t 1
bind-key -T amos M-2 select-window -t 2
bind-key -T amos M-3 select-window -t 3
bind-key -T amos M-4 select-window -t 4
bind-key -T amos M-5 select-window -t 5
bind-key -T amos M-6 select-window -t 6
bind-key -T amos M-7 select-window -t 7
bind-key -T amos M-8 select-window -t 8
bind-key -T amos M-9 select-window -t 9
bind-key -T amos M-0 select-window -t 10
bind-key -T amos M-h select-pane -L
bind-key -T amos M-j select-pane -D
bind-key -T amos M-k select-pane -U
bind-key -T amos M-l select-pane -R
bind-key -T amos MouseDown1Pane   select-pane -t = \; send-keys -M
bind-key -T amos MouseDown1Status select-window -t =
bind-key -T amos MouseDown3Pane   if-shell -F -t = "#{mouse_any_flag}" "select-pane -t=\; send-keys -M" "select-pane -mt="
bind-key -T amos MouseDrag1Pane   if-shell -F -t = "#{mouse_any_flag}" "if -Ft= \"#{pane_in_mode}\" \"copy-mode -M\" \"send-keys -M\"" "copy-mode -M"
bind-key -T amos MouseDrag1Border resize-pane -M
bind-key -T amos WheelUpPane      if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= \"#{pane_in_mode}\" \"send-keys -M\" \"copy-mode -et=\""
bind-key -T amos WheelUpStatus    previous-window
bind-key -T amos WheelDownStatus  next-window
bind-key -T amos C-l send-keys C-l \; run 'sleep 0.05 && tmux clear-history'

bind-key -T amos M-space if -F "#{==:#{session_name},emacs}" "switch-client -t amos" "switch-client -t emacs"

# cat << ‚ñ∫_‚óÑ > /dev/null

# -- windows & pane creation ---------------------------------------------------

# new window retains current path, possible values are:
#   - true
#   - false (default)
tmux_conf_new_window_retain_current_path=false

# new pane retains current path, possible values are:
#   - true (default)
#   - false
tmux_conf_new_pane_retain_current_path=true

# new pane tries to reconnect ssh sessions (experimental), possible values are:
#   - true
#   - false (default)
tmux_conf_new_pane_reconnect_ssh=false

# prompt for session name when creating a new session, possible values are:
#   - true
#   - false (default)
tmux_conf_new_session_prompt=false


# -- display -------------------------------------------------------------------

# RGB 24-bit colour support (since tmux 2.2), possible values are:
#  - true
#  - false (default)
tmux_conf_theme_24b_colour=false

# window style
tmux_conf_theme_window_fg='default'
tmux_conf_theme_window_bg='default'

# highlight focused pane (tmux 2.1+), possible values are:
#   - true
#   - false (default)
tmux_conf_theme_highlight_focused_pane=false

# focused pane colours:
tmux_conf_theme_focused_pane_fg='default'
tmux_conf_theme_focused_pane_bg='#0087d7'               # light blue

# pane border style, possible values are:
#   - thin (default)
#   - fat
tmux_conf_theme_pane_border_style=thin

# pane borders colours:
tmux_conf_theme_pane_border='#444444'                   # gray
tmux_conf_theme_pane_active_border='#00afff'            # light blue

# pane indicator colours
tmux_conf_theme_pane_indicator='#00afff'                # light blue
tmux_conf_theme_pane_active_indicator='#00afff'         # light blue

# status line style
tmux_conf_theme_message_fg='#000000'                    # black
tmux_conf_theme_message_bg='#ffff00'                    # yellow
tmux_conf_theme_message_attr='bold'

# status line command style (<prefix> : Escape)
tmux_conf_theme_message_command_fg='#ffff00'            # yellow
tmux_conf_theme_message_command_bg='#000000'            # black
tmux_conf_theme_message_command_attr='bold'

# window modes style
tmux_conf_theme_mode_fg='#000000'                       # black
tmux_conf_theme_mode_bg='#ffff00'                       # yellow
tmux_conf_theme_mode_attr='bold'

# status line style
tmux_conf_theme_status_fg='#8a8a8a'                     # light gray
tmux_conf_theme_status_bg='#080808'                     # dark gray
tmux_conf_theme_status_attr='none'

# window status style
#   - built-in variables are:
#     - #{circled_window_index}
tmux_conf_theme_window_status_fg='#8a8a8a'              # light gray
tmux_conf_theme_window_status_bg='#080808'              # dark gray
tmux_conf_theme_window_status_attr='none'
tmux_conf_theme_window_status_format='#I #W'
#tmux_conf_theme_window_status_format='#{circled_window_index} #W'
#tmux_conf_theme_window_status_format='#I #W#{?window_bell_flag,üîî,}#{?window_zoomed_flag,üîç,}'

# window current status style
#   - built-in variables are:
#     - #{circled_window_index}
tmux_conf_theme_window_status_current_fg='#000000'      # black
tmux_conf_theme_window_status_current_bg='#00afff'      # light blue
tmux_conf_theme_window_status_current_attr='bold'
tmux_conf_theme_window_status_current_format='#I #W'

# window activity status style
tmux_conf_theme_window_status_activity_fg='default'
tmux_conf_theme_window_status_activity_bg='default'
tmux_conf_theme_window_status_activity_attr='underscore'

# window bell status style
tmux_conf_theme_window_status_bell_fg='#ffff00'         # yellow
tmux_conf_theme_window_status_bell_bg='default'
tmux_conf_theme_window_status_bell_attr='blink,bold'

# window last status style
tmux_conf_theme_window_status_last_fg='#00afff'         # light blue
tmux_conf_theme_window_status_last_bg='default'
tmux_conf_theme_window_status_last_attr='none'

# status left/right sections separators
tmux_conf_theme_left_separator_main=''
tmux_conf_theme_left_separator_sub='|'
tmux_conf_theme_right_separator_main=''
tmux_conf_theme_right_separator_sub='|'

# status left/right content:
#   - separate main sections with '|'
#   - separate subsections with ','
#   - built-in variables are:
#     - #{battery_bar}
#     - #{battery_hbar}
#     - #{battery_percentage}
#     - #{battery_status}
#     - #{battery_vbar}
#     - #{circled_session_name}
#     - #{hostname_ssh}
#     - #{hostname}
#     - #{loadavg}
#     - #{pairing}
#     - #{prefix}
#     - #{root}
#     - #{uptime_d}
#     - #{uptime_h}
#     - #{uptime_m}
#     - #{uptime_s}
#     - #{username}
#     - #{username_ssh}
tmux_conf_theme_status_left=' ‚ùê #S | ‚Üë#{?uptime_d, #{uptime_d}d,}#{?uptime_h, #{uptime_h}h,}#{?uptime_m, #{uptime_m}m,} '
tmux_conf_theme_status_right='#{prefix}#{pairing}#{?battery_status, #{battery_status},}#{?battery_bar, #{battery_bar},}#{?battery_percentage, #{battery_percentage},} , %R , %d %b | #{username}#{root} | #{hostname} '

# status left style
tmux_conf_theme_status_left_fg='#000000,#e4e4e4,#e4e4e4'  # black, white , white
tmux_conf_theme_status_left_bg='#ffff00,#d77000,#00afff'  # yellow, pink, white blue
tmux_conf_theme_status_left_attr='bold,none,none'

# status right style
tmux_conf_theme_status_right_fg='#8a8a8a,#e4e4e4,#000000' # light gray, white, black
tmux_conf_theme_status_right_bg='#080808,#d70000,#e4e4e4' # dark gray, red, white
tmux_conf_theme_status_right_attr='none,none,bold'

# pairing indicator
tmux_conf_theme_pairing='üëì'          # U+1F453
tmux_conf_theme_pairing_fg='none'
tmux_conf_theme_pairing_bg='none'
tmux_conf_theme_pairing_attr='none'

# prefix indicator
tmux_conf_theme_prefix='‚å®'            # U+2328
tmux_conf_theme_prefix_fg='none'
tmux_conf_theme_prefix_bg='none'
tmux_conf_theme_prefix_attr='none'

# root indicator
tmux_conf_theme_root='!'
tmux_conf_theme_root_fg='none'
tmux_conf_theme_root_bg='none'
tmux_conf_theme_root_attr='bold,blink'

# battery bar symbols
tmux_conf_battery_bar_symbol_full='‚óº'
tmux_conf_battery_bar_symbol_empty='‚óª'
#tmux_conf_battery_bar_symbol_full='‚ô•'
#tmux_conf_battery_bar_symbol_empty='¬∑'

# battery bar length (in number of symbols), possible values are:
#   - auto
#   - a number, e.g. 5
tmux_conf_battery_bar_length='auto'

# battery bar palette, possible values are:
#   - gradient (default)
#   - heat
#   - 'colour_full_fg,colour_empty_fg,colour_bg'
tmux_conf_battery_bar_palette='gradient'
#tmux_conf_battery_bar_palette='#d70000,#e4e4e4,#000000'   # red, white, black

# battery hbar palette, possible values are:
#   - gradient (default)
#   - heat
#   - 'colour_low,colour_half,colour_full'
tmux_conf_battery_hbar_palette='gradient'
#tmux_conf_battery_hbar_palette='#d70000,#ff5f00,#5fff00'  # red, orange, green

# battery vbar palette, possible values are:
#   - gradient (default)
#   - heat
#   - 'colour_low,colour_half,colour_full'
tmux_conf_battery_vbar_palette='gradient'
#tmux_conf_battery_vbar_palette='#d70000,#ff5f00,#5fff00'  # red, orange, green

# symbols used to indicate whether battery is charging or discharging
tmux_conf_battery_status_charging='‚ö°'     # U+26A1
tmux_conf_battery_status_discharging='üîã'  # U+1F50B

# clock style
tmux_conf_theme_clock_colour='#00afff'  # light blue
tmux_conf_theme_clock_style='24'

run 'cut -c3- ~/.tmux/.tmux.conf.amos | sh -s _apply_configuration'

# ‚ñ∫_‚óÑ
#
# # exit the script if any statement returns a non-true return value
# set -e
#
# __newline='
# '
#
# _is_enabled() {
#   ( ([ x"$1" = x"enabled" ] || [ x"$1" = x"true" ] || [ x"$1" = x"yes" ] || [ x"$1" = x"1" ]) && return 0 ) || return 1
# }
#
# _circled_digit() {
#   circled_digits='‚ì™ ‚ë† ‚ë° ‚ë¢ ‚ë£ ‚ë§ ‚ë• ‚ë¶ ‚ëß ‚ë® ‚ë© ‚ë™ ‚ë´ ‚ë¨ ‚ë≠ ‚ëÆ ‚ëØ ‚ë∞ ‚ë± ‚ë≤ ‚ë≥'
#   if [ "$1" -le 20 ] 2>/dev/null; then
#     i=$(( $1 + 1 ))
#     eval set -- "$circled_digits"
#     eval echo "\${$i}"
#   else
#     echo "$1"
#   fi
# }
#
# _battery() {
#   uname_s=$(uname -s)
#   case "$uname_s" in
#     *Darwin*)
#       batt=$(pmset -s batt)
#       percentage=$(echo "$batt" |egrep -o [0-9]+%) || return
#       discharging=$(echo "$batt" | grep -qi "discharging" && echo "true" || echo "false")
#       charge="${percentage%%%} / 100"
#       ;;
#     *Linux*)
#       batpath=/sys/class/power_supply/BAT0
#       if [ ! -d $batpath ]; then
#         batpath=/sys/class/power_supply/BAT1
#       fi
#       discharging=$(grep -qi "discharging" $batpath/status && echo "true" || echo "false")
#       bat_capacity=$batpath/capacity
#       bat_energy_full=$batpath/energy_full
#       bat_energy_now=$batpath/energy_now
#       if [ -r "$bat_capacity" ]; then
#         charge="$(cat $bat_capacity) / 100"
#       else
#         if [ ! -r "$bat_energy_full" ] || [ ! -r "$bat_energy_now" ]; then
#           return
#         fi
#         charge="$(cat $bat_energy_now) / $(cat $bat_energy_full)" || return
#       fi
#       ;;
#     *CYGWIN*)
#       wmic path Win32_Battery 2>&1 | grep -q 'No Instance' && return
#       discharging=$(wmic path Win32_Battery Get BatteryStatus 2>/dev/null | grep -q 1 && echo "true" || echo "false")
#       percentage=$(wmic path Win32_Battery Get EstimatedChargeRemaining /format:list 2>/dev/null | grep '[^[:blank:]]' | cut -d= -f2)
#       charge="${percentage} / 100"
#       ;;
#     *OpenBSD*)
#        discharging=$(sysctl -n hw.sensors.acpibat0.raw0 | grep -q 1 && echo "true" || echo "false")
#        if sysctl -n hw.sensors.acpibat0 | grep -q amphour; then
#          charge="$(sysctl -n hw.sensors.acpibat0.amphour3 | cut -d' ' -f1) / $(sysctl -n hw.sensors.acpibat0.amphour0 | cut -d' ' -f1)"
#        else
#          charge="$(sysctl -n hw.sensors.acpibat0.watthour3 | cut -d' ' -f1) / $(sysctl -n hw.sensors.acpibat0.watthour0 | cut -d' ' -f1)"
#        fi
#       ;;
#     *)
#       return
#   esac
#
#   variables=$(tmux  show -gqv '@battery_bar_symbol_full' \;\
#                     show -gqv '@battery_bar_symbol_empty' \;\
#                     show -gqv '@battery_bar_length' \;\
#                     show -gqv '@battery_bar_palette' \;\
#                     show -gqv '@battery_hbar_palette' \;\
#                     show -gqv '@battery_vbar_palette' \;\
#                     show -gqv '@battery_status_charging' \;\
#                     show -gqv '@battery_status_discharging')
#   # shellcheck disable=SC2086
#   { set -f; IFS="$__newline"; set -- $variables; unset IFS; set +f; }
#
#   battery_bar_symbol_full=$1
#   battery_bar_symbol_empty=$2
#   battery_bar_length=$3
#   battery_bar_palette=$4
#   battery_hbar_palette=$5
#   battery_vbar_palette=$6
#   battery_status_charging=$7
#   battery_status_discharging=$8
#
#   if [ x"$battery_bar_length" = x"auto" ]; then
#     columns=$(tmux -q display -p '#{client_width}' 2> /dev/null || echo 80)
#     if [ "$columns" -ge 80 ]; then
#       battery_bar_length=10
#     else
#       battery_bar_length=5
#     fi
#   fi
#
#   if [ x"$discharging" = x"true" ]; then
#     battery_status="$battery_status_discharging"
#   else
#     battery_status="$battery_status_charging"
#   fi
#
#   if echo "$battery_bar_palette" | grep -q -E '^heat|gradient(,[#a-z0-9]{7,9})?$'; then
#     # shellcheck disable=SC2086
#     { set -f; IFS=,; set -- $battery_bar_palette; unset IFS; set +f; }
#     palette_style=$1
#     battery_bg=${2:-none}
#     [ x"$palette_style" = x"gradient" ] && \
#       palette="196 202 208 214 220 226 190 154 118 82 46"
#     [ x"$palette_style" = x"heat" ] && \
#       palette="233 234 235 237 239 241 243 245 247 144 143 142 184 214 208 202 196"
#
#     palette=$(echo "$palette" | awk -v n="$battery_bar_length" '{ for (i = 0; i < n; ++i) printf $(1 + (i * NF / n))" " }')
#     eval set -- "$palette"
#
#     full=$(awk "BEGIN { printf \"%.0f\", ($charge) * $battery_bar_length }")
#     battery_bar="#[bg=$battery_bg]"
#     # shellcheck disable=SC2046
#     [ "$full" -gt 0 ] && \
#       battery_bar="$battery_bar$(printf "#[fg=colour%s]$battery_bar_symbol_full" $(echo "$palette" | cut -d' ' -f1-"$full"))"
#     # shellcheck disable=SC2046
#     empty=$((battery_bar_length - full))
#     # shellcheck disable=SC2046
#     [ "$empty" -gt 0 ] && \
#       battery_bar="$battery_bar$(printf "#[fg=colour%s]$battery_bar_symbol_empty" $(echo "$palette" | cut -d' ' -f$((full + 1))-$((full + empty))))"
#       eval battery_bar="$battery_bar#[fg=colour\${$((full == 0 ? 1 : full))}]"
#   elif echo "$battery_bar_palette" | grep -q -E '^(([#a-z0-9]{7,9}|none),?){3}$'; then
#     # shellcheck disable=SC2086
#     { set -f; IFS=,; set -- $battery_bar_palette; unset IFS; set +f; }
#     battery_full_fg=$1
#     battery_empty_fg=$2
#     battery_bg=$3
#
#     full=$(awk "BEGIN { printf \"%.0f\", ($charge) * $battery_bar_length }")
#     [ x"$battery_bg" != x"none" ] && \
#       battery_bar="#[bg=$battery_bg]"
#     #shellcheck disable=SC2046
#     [ "$full" -gt 0 ] && \
#       battery_bar="$battery_bar#[fg=$battery_full_fg]$(printf "%0.s$battery_bar_symbol_full" $(seq 1 "$full"))"
#     empty=$((battery_bar_length - full))
#     #shellcheck disable=SC2046
#     [ "$empty" -gt 0 ] && \
#       battery_bar="$battery_bar#[fg=$battery_empty_fg]$(printf "%0.s$battery_bar_symbol_empty" $(seq 1 "$empty"))" && \
#       battery_bar="$battery_bar#[fg=$battery_empty_fg]"
#   fi
#
#   if echo "$battery_hbar_palette" | grep -q -E '^heat|gradient(,[#a-z0-9]{7,9})?$'; then
#     # shellcheck disable=SC2086
#     { set -f; IFS=,; set -- $battery_hbar_palette; unset IFS; set +f; }
#     palette_style=$1
#     [ x"$palette_style" = x"gradient" ] && \
#       palette="196 202 208 214 220 226 190 154 118 82 46"
#     [ x"$palette_style" = x"heat" ] && \
#       palette="233 234 235 237 239 241 243 245 247 144 143 142 184 214 208 202 196"
#
#     palette=$(echo "$palette" | awk -v n="$battery_bar_length" '{ for (i = 0; i < n; ++i) printf $(1 + (i * NF / n))" " }')
#     eval set -- "$palette"
#
#     full=$(awk "BEGIN { printf \"%.0f\", ($charge) * $battery_bar_length }")
#     eval battery_hbar_fg="colour\${$((full == 0 ? 1 : full))}"
#   elif echo "$battery_hbar_palette" | grep -q -E '^([#a-z0-9]{7,9},?){3}$'; then
#     # shellcheck disable=SC2086
#     { set -f; IFS=,; set -- $battery_hbar_palette; unset IFS; set +f; }
#
#     # shellcheck disable=SC2046
#     eval $(awk "BEGIN { printf \"battery_hbar_fg=$%d\", (($charge) - 0.001) * $# + 1 }")
#   fi
#
#   eval set -- "‚ñè ‚ñé ‚ñç ‚ñå ‚ñã ‚ñä ‚ñâ ‚ñà"
#   # shellcheck disable=SC2046
#   eval $(awk "BEGIN { printf \"battery_hbar_symbol=$%d\", ($charge) * ($# - 1) + 1 }")
#   battery_hbar="#[fg=${battery_hbar_fg?}]${battery_hbar_symbol?}"
#
#   if echo "$battery_vbar_palette" | grep -q -E '^heat|gradient(,[#a-z0-9]{7,9})?$'; then
#     # shellcheck disable=SC2086
#     { set -f; IFS=,; set -- $battery_vbar_palette; unset IFS; set +f; }
#     palette_style=$1
#     [ x"$palette_style" = x"gradient" ] && \
#       palette="196 202 208 214 220 226 190 154 118 82 46"
#     [ x"$palette_style" = x"heat" ] && \
#       palette="233 234 235 237 239 241 243 245 247 144 143 142 184 214 208 202 196"
#
#     palette=$(echo "$palette" | awk -v n="$battery_bar_length" '{ for (i = 0; i < n; ++i) printf $(1 + (i * NF / n))" " }')
#     eval set -- "$palette"
#
#     full=$(awk "BEGIN { printf \"%.0f\", ($charge) * $battery_bar_length }")
#     eval battery_vbar_fg="colour\${$((full == 0 ? 1 : full))}"
#   elif echo "$battery_vbar_palette" | grep -q -E '^([#a-z0-9]{7,9},?){3}$'; then
#     # shellcheck disable=SC2086
#     { set -f; IFS=,; set -- $battery_vbar_palette; unset IFS; set +f; }
#
#     # shellcheck disable=SC2046
#     eval $(awk "BEGIN { printf \"battery_vbar_fg=$%d\", (($charge) - 0.001) * $# + 1 }")
#   fi
#
#   eval set -- "‚ñÅ ‚ñÇ ‚ñÉ ‚ñÑ ‚ñÖ ‚ñÜ ‚ñá ‚ñà"
#   # shellcheck disable=SC2046
#   eval $(awk "BEGIN { printf \"battery_vbar_symbol=$%d\", ($charge) * ($# - 1) + 1 }")
#   battery_vbar="#[fg=${battery_vbar_fg?}]${battery_vbar_symbol?}"
#
#   battery_percentage="$(awk "BEGIN { printf \"%.0f%%\", ($charge) * 100 }")"
#
#   tmux  set -s '@battery_status' "$battery_status" \;\
#         set -s '@battery_bar' "$battery_bar" \;\
#         set -s '@battery_hbar' "$battery_hbar" \;\
#         set -s '@battery_vbar' "$battery_vbar" \;\
#         set -s '@battery_percentage' "$battery_percentage"
# }
#
# _username() {
#   tty=${1:-$(tmux display -p '#{pane_tty}')}
#   ssh_only=$2
#   # shellcheck disable=SC2039
#   if [ x"$OSTYPE" = x"cygwin" ]; then
#     pid=$(ps -a | awk -v tty="${tty##/dev/}" '$5 == tty && /ssh/ && && !/vagrant ssh/ && !/autossh/ && !/-W/ { print $1 }')
#     [ -n "$pid" ] && ssh_parameters=$(tr '\0' ' ' < "/proc/$pid/cmdline" | sed 's/^ssh //')
#   else
#     ssh_parameters=$(ps -t "$tty" -o command= | awk '/ssh/ && !/vagrant ssh/ && !/autossh/ && !/-W/ { $1=""; print $0; exit }')
#   fi
#   if [ -n "$ssh_parameters" ]; then
#     # shellcheck disable=SC2086
#     username=$(ssh -G $ssh_parameters 2>/dev/null | awk 'NR > 2 { exit } ; /^user / { print $2 }')
#     # shellcheck disable=SC2086
#     [ -z "$username" ] && username=$(ssh -T -o ControlPath=none -o ProxyCommand="sh -c 'echo %%username%% %r >&2'" $ssh_parameters 2>&1 | awk '/^%username% / { print $2; exit }')
#   else
#     if ! _is_enabled "$ssh_only"; then
#       # shellcheck disable=SC2039
#       if [ x"$OSTYPE" = x"cygwin" ]; then
#         username=$(whoami)
#       else
#         username=$(ps -t "$tty" -o user= -o pid= -o ppid= -o command= | awk '
#           !/ssh/ { user[$2] = $1; ppid[$3] = 1 }
#           END {
#           	for (i in user)
#           		if (!(i in ppid))
#               {
#           			print user[i]
#                 exit
#               }
#           }
#         ')
#       fi
#     fi
#   fi
#
#   echo "$username"
# }
#
# _hostname() {
#   tty=${1:-$(tmux display -p '#{pane_tty}')}
#   ssh_only=$2
#   # shellcheck disable=SC2039
#   if [ x"$OSTYPE" = x"cygwin" ]; then
#     pid=$(ps -a | awk -v tty="${tty##/dev/}" '$5 == tty && /ssh/ && !/vagrant ssh/ && !/autossh/ && !/-W/ { print $1 }')
#     [ -n "$pid" ] && ssh_parameters=$(tr '\0' ' ' < "/proc/$pid/cmdline" | sed 's/^ssh //')
#   else
#     ssh_parameters=$(ps -t "$tty" -o command= | awk '/ssh/ && !/vagrant ssh/ && !/autossh/ && !/-W/ { $1=""; print $0; exit }')
#   fi
#   if [ -n "$ssh_parameters" ]; then
#     # shellcheck disable=SC2086
#     hostname=$(ssh -G $ssh_parameters 2>/dev/null | awk 'NR > 2 { exit } ; /^hostname / { print $2 }')
#     # shellcheck disable=SC2086
#     [ -z "$hostname" ] && hostname=$(ssh -T -o ControlPath=none -o ProxyCommand="sh -c 'echo %%hostname%% %h >&2'" $ssh_parameters 2>&1 | awk '/^%hostname% / { print $2; exit }')
#     #shellcheck disable=SC1004
#     hostname=$(echo "$hostname" | awk '\
#     { \
#       if ($1~/^[0-9.:]+$/) \
#         print $1; \
#       else \
#         split($1, a, ".") ; print a[1] \
#     }')
#   else
#     if ! _is_enabled "$ssh_only"; then
#       hostname=$(command hostname -s)
#     fi
#   fi
#
#   echo "$hostname"
# }
#
# _root() {
#   username=$(_username "$tty" false "$@")
#   if [ x"$username" = x"root" ]; then
#     tmux show -gqv '@root'
#   fi
# }
#
# _uptime() {
#   case $(uname -s) in
#     *Darwin*)
#       boot=$(sysctl -q -n kern.boottime | awk -F'[ ,:]+' '{ print $4 }')
#       now=$(date +%s)
#       ;;
#     *Linux*|*CYGWIN*)
#       now=$(cut -d' ' -f1 < /proc/uptime)
#       ;;
#     *OpenBSD*)
#       boot=$(sysctl -n kern.boottime)
#       now=$(date +%s)
#   esac
#   # shellcheck disable=SC1004
#   awk -v boot="$boot" -v now="$now" '
#     BEGIN {
#       uptime = now - boot
#       d = int(uptime / 86400)
#       h = int(uptime / 3600) % 24
#       m = int(uptime / 60) % 60
#       s = int(uptime) % 60
#
#       system("tmux  set -s @uptime_d " d + 0 " \\; " \
#                    "set -s @uptime_h " h + 0 " \\; " \
#                    "set -s @uptime_m " m + 0 " \\; " \
#                    "set -s @uptime_s " s + 0)
#     }'
# }
#
# _loadavg() {
#   case $(uname -s) in
#     *Darwin*)
#       tmux set -s @loadavg "$(sysctl -q -n vm.loadavg | cut -d' ' -f2)"
#       ;;
#     *Linux*)
#       tmux set -s @loadavg "$(cut -d' ' -f1 < /proc/loadavg)"
#       ;;
#     *OpenBSD*)
#       tmux set -s @loadavg "$(sysctl -q -n vm.loadavg | cut -d' ' -f1)"
#       ;;
#   esac
# }
#
# _split_window() {
#   tty=${1:-$(tmux display -p '#{pane_tty}')}
#   shift
#   # shellcheck disable=SC2039
#   if [ x"$OSTYPE" = x"cygwin" ]; then
#     pid=$(ps -a | sort -d | awk -v tty="${tty##/dev/}" '$5 == tty && /ssh/ && !/-W/ { print $1; exit 0 }')
#     [ -n "$pid" ] && ssh=$(tr '\0' ' ' < "/proc/$pid/cmdline")
#   else
#     ssh=$(ps -t "$tty" -o command= | sort -d | awk '/ssh/ && !/-W/ { print $0; exit 0 }')
#   fi
#   if [ -n "$ssh" ]; then
#     # shellcheck disable=SC2046
#     tmux split-window "$@" $(echo "$ssh" | sed -e "s/;/\\\\;/g")
#   else
#     tmux split-window "$@"
#   fi
# }
#
# _apply_overrides() {
#   tmux_conf_theme_24b_colour=${tmux_conf_theme_24b_colour:-false}
#   if _is_enabled "$tmux_conf_theme_24b_colour"; then
#   case "$TERM" in
#			screen-*|tmux-*)
#				;;
#			*)
#				tmux set-option -ga terminal-overrides ",$TERM:Tc"
#				;;
#   esac
#   fi
# }
#
# _apply_theme() {
#
#   # -- panes -------------------------------------------------------------
#
#   tmux_conf_theme_window_fg=${tmux_conf_theme_window_fg:-default}
#   tmux_conf_theme_window_bg=${tmux_conf_theme_window_bg:-default}
#   tmux_conf_theme_highlight_focused_pane=${tmux_conf_theme_highlight_focused_pane:-false}
#   tmux_conf_theme_focused_pane_fg=${tmux_conf_theme_focused_pane_fg:-'default'} # default
#   tmux_conf_theme_focused_pane_bg=${tmux_conf_theme_focused_pane_bg:-'#0087d7'} # light blue
#
#   # tmux 1.9 doesn't really like set -q
#   if tmux show -g -w | grep -q window-style; then
#     tmux set -sw window-style "fg=$tmux_conf_theme_window_fg,bg=$tmux_conf_theme_window_bg"
#
#     if _is_enabled "$tmux_conf_theme_highlight_focused_pane"; then
#       tmux set -sw window-active-style "fg=$tmux_conf_theme_focused_pane_fg,bg=$tmux_conf_theme_focused_pane_bg"
#     else
#       tmux set -sw window-active-style default
#     fi
#   fi
#
#   tmux_conf_theme_pane_border_style=${tmux_conf_theme_pane_border_style:-thin}
#   tmux_conf_theme_pane_border=${tmux_conf_theme_pane_border:-'#444444'}               # light gray
#   tmux_conf_theme_pane_active_border=${tmux_conf_theme_pane_active_border:-'#00afff'} # light blue
#   tmux_conf_theme_pane_border_fg=${tmux_conf_theme_pane_border_fg:-$tmux_conf_theme_pane_border}
#   tmux_conf_theme_pane_active_border_fg=${tmux_conf_theme_pane_active_border_fg:-$tmux_conf_theme_pane_active_border}
#   case "$tmux_conf_theme_pane_border_style" in
#     fat)
#       tmux_conf_theme_pane_border_bg=${tmux_conf_theme_pane_border_bg:-$tmux_conf_theme_pane_border_fg}
#       tmux_conf_theme_pane_active_border_bg=${tmux_conf_theme_pane_active_border_bg:-$tmux_conf_theme_pane_active_border_fg}
#       ;;
#     thin|*)
#       tmux_conf_theme_pane_border_bg=${tmux_conf_theme_pane_border_bg:-'default'}
#       tmux_conf_theme_pane_active_border_bg=${tmux_conf_theme_pane_active_border_bg:-'default'}
#       ;;
#   esac
#   tmux set -sw pane-border-style "fg=$tmux_conf_theme_pane_border_fg,bg=$tmux_conf_theme_pane_border_bg" \; set -s pane-active-border-style "fg=$tmux_conf_theme_pane_active_border_fg,bg=$tmux_conf_theme_pane_active_border_bg"
#
#   tmux_conf_theme_pane_indicator=${tmux_conf_theme_pane_indicator:-'#00afff'}               # light blue
#   tmux_conf_theme_pane_active_indicator=${tmux_conf_theme_pane_active_indicator:-'#00afff'} # light blue
#
#   tmux set -s display-panes-colour "$tmux_conf_theme_pane_indicator" \; set -s display-panes-active-colour "$tmux_conf_theme_pane_active_indicator"
#
#   # -- status line -------------------------------------------------------
#
#   tmux_conf_theme_left_separator_main=${tmux_conf_theme_left_separator_main-''}
#   tmux_conf_theme_left_separator_sub=${tmux_conf_theme_left_separator_sub-'|'}
#   tmux_conf_theme_right_separator_main=${tmux_conf_theme_right_separator_main-''}
#   tmux_conf_theme_right_separator_sub=${tmux_conf_theme_right_separator_sub-'|'}
#
#   tmux_conf_theme_message_fg=${tmux_conf_theme_message_fg:-'#000000'}   # black
#   tmux_conf_theme_message_bg=${tmux_conf_theme_message_bg:-'#ffff00'}   # yellow
#   tmux_conf_theme_message_attr=${tmux_conf_theme_message_attr:-'bold'}
#   tmux set -s message-style "fg=$tmux_conf_theme_message_fg,bg=$tmux_conf_theme_message_bg,$tmux_conf_theme_message_attr"
#
#   tmux_conf_theme_message_command_fg=${tmux_conf_theme_message_command_fg:-'#ffff00'} # yellow
#   tmux_conf_theme_message_command_bg=${tmux_conf_theme_message_command_bg:-'#000000'} # black
#   tmux_conf_theme_message_command_attr=${tmux_conf_theme_message_command_attr:-'bold'}
#   tmux set -s message-command-style "fg=$tmux_conf_theme_message_command_fg,bg=$tmux_conf_theme_message_command_bg,$tmux_conf_theme_message_command_attr"
#
#   tmux_conf_theme_mode_fg=${tmux_conf_theme_mode_fg:-'#000000'} # black
#   tmux_conf_theme_mode_bg=${tmux_conf_theme_mode_bg:-'#ffff00'} # yellow
#   tmux_conf_theme_mode_attr=${tmux_conf_theme_mode_attr:-'bold'}
#   tmux set -sw mode-style "fg=$tmux_conf_theme_mode_fg,bg=$tmux_conf_theme_mode_bg,$tmux_conf_theme_mode_attr"
#
#   tmux_conf_theme_status_fg=${tmux_conf_theme_status_fg:-'#8a8a8a'} # white
#   tmux_conf_theme_status_bg=${tmux_conf_theme_status_bg:-'#080808'} # dark gray
#   tmux_conf_theme_status_attr=${tmux_conf_theme_status_attr:-'none'}
#   tmux  set -s status-style "fg=$tmux_conf_theme_status_fg,bg=$tmux_conf_theme_status_bg,$tmux_conf_theme_status_attr"        \;\
#         set -s status-left-style "fg=$tmux_conf_theme_status_fg,bg=$tmux_conf_theme_status_bg,$tmux_conf_theme_status_attr"   \;\
#         set -s status-right-style "fg=$tmux_conf_theme_status_fg,bg=$tmux_conf_theme_status_bg,$tmux_conf_theme_status_attr"
#
#   tmux_conf_theme_window_status_fg=${tmux_conf_theme_window_status_fg:-'#8a8a8a'} # white
#   tmux_conf_theme_window_status_bg=${tmux_conf_theme_window_status_bg:-'#080808'} # dark gray
#   tmux_conf_theme_window_status_attr=${tmux_conf_theme_window_status_attr:-'none'}
#   tmux_conf_theme_window_status_format=${tmux_conf_theme_window_status_format:-'#I #W'}
#
#   tmux_conf_theme_window_status_current_fg=${tmux_conf_theme_window_status_current_fg:-'#000000'} # black
#   tmux_conf_theme_window_status_current_bg=${tmux_conf_theme_window_status_current_bg:-'#00afff'} # light blue
#   tmux_conf_theme_window_status_current_attr=${tmux_conf_theme_window_status_current_attr:-'bold'}
#   tmux_conf_theme_window_status_current_format=${tmux_conf_theme_window_status_current_format:-'#I #W'}
#   if [ x"$(tmux show -g -v status-justify)" = x"right" ]; then
#     tmux_conf_theme_window_status_current_format="#[fg=$tmux_conf_theme_window_status_current_bg,bg=$tmux_conf_theme_window_status_bg]$tmux_conf_theme_right_separator_main#[fg=default,bg=default,default] $tmux_conf_theme_window_status_current_format #[fg=$tmux_conf_theme_window_status_bg,bg=$tmux_conf_theme_window_status_current_bg,none]$tmux_conf_theme_right_separator_main"
#   else
#     tmux_conf_theme_window_status_current_format="#[fg=$tmux_conf_theme_window_status_bg,bg=$tmux_conf_theme_window_status_current_bg]$tmux_conf_theme_left_separator_main#[fg=default,bg=default,default] $tmux_conf_theme_window_status_current_format #[fg=$tmux_conf_theme_window_status_current_bg,bg=$tmux_conf_theme_status_bg,none]$tmux_conf_theme_left_separator_main"
#   fi
#
#   tmux_conf_theme_window_status_format=$(echo "$tmux_conf_theme_window_status_format" | sed 's%#{circled_window_index}%#(cut -c3- ~/.tmux/.tmux.conf.amos | sh -s _circled_digit #I)%g')
#   tmux_conf_theme_window_status_current_format=$(echo "$tmux_conf_theme_window_status_current_format" | sed 's%#{circled_window_index}%#(cut -c3- ~/.tmux/.tmux.conf.amos | sh -s _circled_digit #I)%g')
#
#   tmux  set -sw window-status-style "fg=$tmux_conf_theme_window_status_fg,bg=$tmux_conf_theme_window_status_bg,$tmux_conf_theme_window_status_attr" \;\
#         set -sw window-status-format "$tmux_conf_theme_window_status_format" \;\
#         set -sw window-status-current-style "fg=$tmux_conf_theme_window_status_current_fg,bg=$tmux_conf_theme_window_status_current_bg,$tmux_conf_theme_window_status_current_attr" \;\
#         set -sw window-status-current-format "$tmux_conf_theme_window_status_current_format"
#
#   tmux_conf_theme_window_status_activity_fg=${tmux_conf_theme_window_status_activity_fg:-'default'}
#   tmux_conf_theme_window_status_activity_bg=${tmux_conf_theme_window_status_activity_bg:-'default'}
#   tmux_conf_theme_window_status_activity_attr=${tmux_conf_theme_window_status_activity_attr:-'underscore'}
#   tmux set -sw window-status-activity-style "fg=$tmux_conf_theme_window_status_activity_fg,bg=$tmux_conf_theme_window_status_activity_bg,$tmux_conf_theme_window_status_activity_attr"
#
#   tmux_conf_theme_window_status_bell_fg=${tmux_conf_theme_window_status_bell_fg:-'#ffff00'} # yellow
#   tmux_conf_theme_window_status_bell_bg=${tmux_conf_theme_window_status_bell_bg:-'default'}
#   tmux_conf_theme_window_status_bell_attr=${tmux_conf_theme_window_status_bell_attr:-'blink,bold'}
#   tmux set -sw window-status-bell-style "fg=$tmux_conf_theme_window_status_bell_fg,bg=$tmux_conf_theme_window_status_bell_bg,$tmux_conf_theme_window_status_bell_attr"
#
#   tmux_conf_theme_window_status_last_fg=${tmux_conf_theme_window_status_last_fg:-'#00afff'} # light blue
#   tmux_conf_theme_window_status_last_bg=${tmux_conf_theme_window_status_last_bg:-'default'}
#   tmux_conf_theme_window_status_last_attr=${tmux_conf_theme_window_status_last_attr:-'none'}
#   tmux set -sw window-status-last-style "fg=$tmux_conf_theme_window_status_last_fg,bg=$tmux_conf_theme_window_status_last_bg,$tmux_conf_theme_window_status_last_attr"
#
#   # -- indicators
#
#   tmux_conf_theme_pairing=${tmux_conf_theme_pairing:-'üëì'}            # U+1F453
#   tmux_conf_theme_pairing_fg=${tmux_conf_theme_pairing_fg:-'#e4e4e4'} # white
#   tmux_conf_theme_pairing_bg=${tmux_conf_theme_pairing_bg:-'none'}
#   tmux_conf_theme_pairing_attr=${tmux_conf_theme_pairing_attr:-'none'}
#
#   tmux_conf_theme_prefix=${tmux_conf_theme_prefix:-'‚å®'}             # U+2328
#   tmux_conf_theme_prefix_fg=${tmux_conf_theme_prefix_fg:-'#e4e4e4'} # white
#   tmux_conf_theme_prefix_bg=${tmux_conf_theme_prefix_bg:-'none'}
#   tmux_conf_theme_prefix_attr=${tmux_conf_theme_prefix_attr:-'none'}
#
#   tmux_conf_theme_root=${tmux_conf_theme_root:-'!'}
#   tmux_conf_theme_root_fg=${tmux_conf_theme_root_fg:-'none'}
#   tmux_conf_theme_root_bg=${tmux_conf_theme_root_bg:-'none'}
#   tmux_conf_theme_root_attr=${tmux_conf_theme_root_attr:-'bold,blink'}
#
#   # -- status left style
#
#   tmux_conf_theme_status_left=${tmux_conf_theme_status_left-' ‚ùê #S '}
#   tmux_conf_theme_status_left_fg=${tmux_conf_theme_status_left_fg:-'#000000,#e4e4e4,#e4e4e4'}  # black, white , white
#   tmux_conf_theme_status_left_bg=${tmux_conf_theme_status_left_bg:-'#ffff00,#ff00af,#00afff'}  # yellow, pink, white blue
#   tmux_conf_theme_status_left_attr=${tmux_conf_theme_status_left_attr:-'bold,none,none'}
#
#   tmux_conf_theme_status_left=$(echo "$tmux_conf_theme_status_left" | sed \
#     -e "s/#{pairing}/#[fg=$tmux_conf_theme_pairing_fg]#[bg=$tmux_conf_theme_pairing_bg]#[$tmux_conf_theme_pairing_attr]#{?session_many_attached,$tmux_conf_theme_pairing,}/g")
#
#   tmux_conf_theme_status_left=$(echo "$tmux_conf_theme_status_left" | sed \
#     -e "s/#{prefix}/#[fg=$tmux_conf_theme_prefix_fg]#[bg=$tmux_conf_theme_prefix_bg]#[$tmux_conf_theme_prefix_attr]#{?client_prefix,$tmux_conf_theme_prefix,}/g")
#
#   tmux_conf_theme_status_left=$(echo "$tmux_conf_theme_status_left" | sed \
#     -e "s%#{root}%#[fg=$tmux_conf_theme_root_fg]#[bg=$tmux_conf_theme_root_bg]#[$tmux_conf_theme_root_attr]#(cut -c3- ~/.tmux/.tmux.conf.amos | sh -s _root #{pane_tty} #D)#[inherit]%g")
#
#   if [ -n "$tmux_conf_theme_status_left" ]; then
#     status_left=$(awk \
#                       -v fg_="$tmux_conf_theme_status_left_fg" \
#                       -v bg_="$tmux_conf_theme_status_left_bg" \
#                       -v attr_="$tmux_conf_theme_status_left_attr" \
#                       -v mainsep="$tmux_conf_theme_left_separator_main" \
#                       -v subsep="$tmux_conf_theme_left_separator_sub" '
#       function subsplit(s,   l, i, a, r)
#       {
#         l = split(s, a, ",")
#         for (i = 1; i <= l; ++i)
#         {
#           o = split(a[i], _, "(") - 1
#           c = split(a[i], _, ")") - 1
#           open += o - c
#           o_ = split(a[i], _, "{") - 1
#           c_ = split(a[i], _, "}") - 1
#           open_ += o_ - c_
#           o__ = split(a[i], _, "[") - 1
#           c__ = split(a[i], _, "]") - 1
#           open__ += o__ - c__
#
#           if (i == l)
#             r = sprintf("%s%s", r, a[i])
#           else if (open || open_ || open__)
#             r = sprintf("%s%s,", r, a[i])
#           else
#             r = sprintf("%s%s#[fg=%s,bg=%s,%s]%s", r, a[i], fg[j], bg[j], attr[j], subsep)
#         }
#
#         gsub(/#\[inherit\]/, sprintf("#[default]#[fg=%s,bg=%s,%s]", fg[j], bg[j], attr[j]), r)
#         return r
#       }
#       BEGIN {
#         FS = "|"
#         l1 = split(fg_, fg, ",")
#         l2 = split(bg_, bg, ",")
#         l3 = split(attr_, attr, ",")
#         l = l1 < l2 ? (l1 < l3 ? l1 : l3) : (l2 < l3 ? l2 : l3)
#       }
#       {
#         for (i = j = 1; i <= NF; ++i)
#         {
#           if (open || open_ || open__)
#             printf "|%s", subsplit($i)
#           else
#           {
#             if (i > 1)
#               printf "#[fg=%s,bg=%s,none]%s#[fg=%s,bg=%s,%s]%s", bg[j_], bg[j], mainsep, fg[j], bg[j], attr[j], subsplit($i)
#             else
#               printf "#[fg=%s,bg=%s,%s]%s", fg[j], bg[j], attr[j], subsplit($i)
#           }
#
#           if (!open && !open_ && !open__)
#           {
#             j_ = j
#             j = j % l + 1
#           }
#         }
#         printf "#[fg=%s,bg=%s,none]%s", bg[j_], "default", mainsep
#       }' << EOF
# $tmux_conf_theme_status_left
# EOF
#     )
#
#     # are we running a tmux in between v1.9 and v2.0?
#     if [ x"$(tmux -q -L tmux_theme_status_left_test -f /dev/null new-session -d \; show -g -v status-left \; kill-session)" = x"[#S] " ]; then
#       case "$status_left" in
#         *\ )
#           ;;
#         *)
#           status_left="$status_left "
#           ;;
#       esac
#     fi
#   fi
#
#   # -- status right style
#
#   tmux_conf_theme_status_right=${tmux_conf_theme_status_right-'#{pairing}#{prefix} #{battery_status} #{battery_bar} #{battery_percentage} , %R , %d %b | #{username} | #{hostname} '}
#   tmux_conf_theme_status_right_fg=${tmux_conf_theme_status_right_fg:-'#8a8a8a,#e4e4e4,#000000'} # light gray, white, black
#   tmux_conf_theme_status_right_bg=${tmux_conf_theme_status_right_bg:-'#080808,#d70000,#e4e4e4'} # dark gray, red, white
#   tmux_conf_theme_status_right_attr=${tmux_conf_theme_status_right_attr:-'none,none,bold'}
#
#   tmux_conf_theme_status_right=$(echo "$tmux_conf_theme_status_right" | sed \
#     -e "s/#{pairing}/#[fg=$tmux_conf_theme_pairing_fg]#[bg=$tmux_conf_theme_pairing_bg]#[$tmux_conf_theme_pairing_attr]#{?session_many_attached,$tmux_conf_theme_pairing,}/g")
#
#   tmux_conf_theme_status_right=$(echo "$tmux_conf_theme_status_right" | sed \
#     -e "s/#{prefix}/#[fg=$tmux_conf_theme_prefix_fg]#[bg=$tmux_conf_theme_prefix_bg]#[$tmux_conf_theme_prefix_attr]#{?client_prefix,$tmux_conf_theme_prefix,}/g")
#
#   tmux_conf_theme_status_right=$(echo "$tmux_conf_theme_status_right" | sed \
#     -e "s%#{root}%#[fg=$tmux_conf_theme_root_fg]#[bg=$tmux_conf_theme_root_bg]#[$tmux_conf_theme_root_attr]#(cut -c3- ~/.tmux/.tmux.conf.amos | sh -s _root #{pane_tty} #D)#[inherit]%g")
#
#   if [ -n "$tmux_conf_theme_status_right" ]; then
#     status_right=$(awk \
#                       -v fg_="$tmux_conf_theme_status_right_fg" \
#                       -v bg_="$tmux_conf_theme_status_right_bg" \
#                       -v attr_="$tmux_conf_theme_status_right_attr" \
#                       -v mainsep="$tmux_conf_theme_right_separator_main" \
#                       -v subsep="$tmux_conf_theme_right_separator_sub" '
#  	  	function subsplit(s,   l, i, a, r)
#  	  	{
#  	  		l = split(s, a, ",")
#  	  		for (i = 1; i <= l; ++i)
#  	  		{
#  	  			o = split(a[i], _, "(") - 1
#  	  			c = split(a[i], _, ")") - 1
#  	  			open += o - c
#  	  			o_ = split(a[i], _, "{") - 1
#  	  			c_ = split(a[i], _, "}") - 1
#  	  			open_ += o_ - c_
#           o__ = split(a[i], _, "[") - 1
#           c__ = split(a[i], _, "]") - 1
#           open__ += o__ - c__
#
#           if (i == l)
#             r = sprintf("%s%s", r, a[i])
#  	  			else if (open || open_ || open__)
#  	  				r = sprintf("%s%s,", r, a[i])
#  	  			else
#  	  				r = sprintf("%s%s#[fg=%s,bg=%s,%s]%s", r, a[i], fg[j], bg[j], attr[j], subsep)
#  	  		}
#
#         gsub(/#\[inherit\]/, sprintf("#[default]#[fg=%s,bg=%s,%s]", fg[j], bg[j], attr[j]), r)
#  	  		return r
#  	  	}
#  	  	BEGIN {
#  	  		FS = "|"
#  	  		l1 = split(fg_, fg, ",")
#  	  		l2 = split(bg_, bg, ",")
#  	  		l3 = split(attr_, attr, ",")
#  	  		l = l1 < l2 ? (l1 < l3 ? l1 : l3) : (l2 < l3 ? l2 : l3)
#  	  	}
#  	  	{
#  	  		for (i = j = 1; i <= NF; ++i)
#  	  		{
#  	  			if (open_ || open || open__)
#  	  				printf "|%s", subsplit($i)
#  	  			else
#  	  				printf "#[fg=%s,bg=%s,none]%s#[fg=%s,bg=%s,%s]%s", bg[j], (i == 1) ? "default" : bg[j_], mainsep, fg[j], bg[j], attr[j], subsplit($i)
#
#           if (!open && !open_ && !open__)
#           {
#             j_ = j
#  	  			  j = j % l + 1
#  	  			}
#  	  		}
#       }' << EOF
# $tmux_conf_theme_status_right
# EOF
#     )
#   fi
#
#   # -- variables
#
#   tmux set -s '@root' "$tmux_conf_theme_root"
#
#   tmux_conf_battery_bar_symbol_full=${tmux_conf_battery_bar_symbol_full:-'‚óº'}
#   tmux_conf_battery_bar_symbol_empty=${tmux_conf_battery_bar_symbol_empty:-'‚óª'}
#   tmux_conf_battery_bar_length=${tmux_conf_battery_bar_length:-'auto'}
#   tmux_conf_battery_bar_palette=${tmux_conf_battery_bar_palette:-'gradient'}
#   tmux_conf_battery_hbar_palette=${tmux_conf_battery_hbar_palette:-'gradient'} # red, orange, green
#   tmux_conf_battery_vbar_palette=${tmux_conf_battery_vbar_palette:-'gradient'} # red, orange, green
#   tmux_conf_battery_status_charging=${tmux_conf_battery_status_charging:-'‚ö°'}        # U+26A1
#   tmux_conf_battery_status_discharging=${tmux_conf_battery_status_discharging:-'üîã'}  # U+1F50B
#
#   case "$status_left $status_right" in
#     *'#{battery_status}'*|*'#{battery_bar}'*|*'#{battery_hbar}'*|*'#{battery_vbar}'*|*'#{battery_percentage}'*)
#       status_left=$(echo "$status_left" | sed -E \
#         -e 's/#\{(\?)?battery_bar/#\{\1@battery_bar/g' \
#         -e 's/#\{(\?)?battery_hbar/#\{\1@battery_hbar/g' \
#         -e 's/#\{(\?)?battery_vbar/#\{\1@battery_vbar/g' \
#         -e 's/#\{(\?)?battery_status/#\{\1@battery_status/g' \
#         -e 's/#\{(\?)?battery_percentage/#\{\1@battery_percentage/g')
#       status_right=$(echo "$status_right" | sed -E \
#         -e 's/#\{(\?)?battery_bar/#\{\1@battery_bar/g' \
#         -e 's/#\{(\?)?battery_hbar/#\{\1@battery_hbar/g' \
#         -e 's/#\{(\?)?battery_vbar/#\{\1@battery_vbar/g' \
#         -e 's/#\{(\?)?battery_status/#\{\1@battery_status/g' \
#         -e 's/#\{(\?)?battery_percentage/#\{\1@battery_percentage/g')
#
#       tmux  set -s '@battery_bar_symbol_full' "$tmux_conf_battery_bar_symbol_full" \;\
#             set -s '@battery_bar_symbol_empty' "$tmux_conf_battery_bar_symbol_empty" \;\
#             set -s '@battery_bar_length' "$tmux_conf_battery_bar_length" \;\
#             set -s '@battery_bar_palette' "$tmux_conf_battery_bar_palette" \;\
#             set -s '@battery_hbar_palette' "$tmux_conf_battery_hbar_palette" \;\
#             set -s '@battery_vbar_palette' "$tmux_conf_battery_vbar_palette" \;\
#             set -s '@battery_status_charging' "$tmux_conf_battery_status_charging" \;\
#             set -s '@battery_status_discharging' "$tmux_conf_battery_status_discharging"
#       status_right="#(cut -c3- ~/.tmux/.tmux.conf.amos | sh -s _battery)$status_right"
#       ;;
#   esac
#
#   case "$status_left $status_right" in
#     *'#{username}'*|*'#{hostname}'*|*'#{username_ssh}'*|*'#{hostname_ssh}'*)
#       status_left=$(echo "$status_left" | sed \
#         -e 's%#{username}%#(cut -c3- ~/.tmux/.tmux.conf.amos | sh -s _username #{pane_tty} false #D)%g' \
#         -e 's%#{hostname}%#(cut -c3- ~/.tmux/.tmux.conf.amos | sh -s _hostname #{pane_tty} false #D)%g' \
#         -e 's%#{username_ssh}%#(cut -c3- ~/.tmux/.tmux.conf.amos | sh -s _username #{pane_tty} true #D)%g' \
#         -e 's%#{hostname_ssh}%#(cut -c3- ~/.tmux/.tmux.conf.amos | sh -s _hostname #{pane_tty} true #D)%g')
#       status_right=$(echo "$status_right" | sed \
#         -e 's%#{username}%#(cut -c3- ~/.tmux/.tmux.conf.amos | sh -s _username #{pane_tty} false #D)%g' \
#         -e 's%#{hostname}%#(cut -c3- ~/.tmux/.tmux.conf.amos | sh -s _hostname #{pane_tty} false #D)%g' \
#         -e 's%#{username_ssh}%#(cut -c3- ~/.tmux/.tmux.conf.amos | sh -s _username #{pane_tty} true #D)%g' \
#         -e 's%#{hostname_ssh}%#(cut -c3- ~/.tmux/.tmux.conf.amos | sh -s _hostname #{pane_tty} true #D)%g')
#       ;;
#   esac
#
#   case "$status_left $status_right" in
#     *'#{uptime_d}'*|*'#{uptime_h}'*|*'#{uptime_m}'*)
#       status_left=$(echo "$status_left" | sed -E \
#         -e 's/#\{(\?)?uptime_d/#\{\1@uptime_d/g' \
#         -e 's/#\{(\?)?uptime_h/#\{\1@uptime_h/g' \
#         -e 's/#\{(\?)?uptime_m/#\{\1@uptime_m/g' \
#         -e 's/#\{(\?)?uptime_s/#\{\1@uptime_s/g')
#       status_right=$(echo "$status_right" | sed -E \
#         -e 's/#\{(\?)?uptime_d/#\{\1@uptime_d/g' \
#         -e 's/#\{(\?)?uptime_h/#\{\1@uptime_h/g' \
#         -e 's/#\{(\?)?uptime_m/#\{\1@uptime_m/g' \
#         -e 's/#\{(\?)?uptime_s/#\{\1@uptime_s/g')
#       status_right="#(cut -c3- ~/.tmux/.tmux.conf.amos | sh -s _uptime)$status_right"
#       ;;
#   esac
#
#   case "$status_left $status_right" in
#     *'#{loadavg}'*)
#       status_left=$(echo "$status_left" | sed -E \
#         -e 's/#\{(\?)?loadavg/#\{\1@loadavg/g')
#       status_right=$(echo "$status_right" | sed -E \
#         -e 's/#\{(\?)?loadavg/#\{\1@loadavg/g')
#       status_right="#(cut -c3- ~/.tmux/.tmux.conf.amos | sh -s _loadavg)$status_right"
#       ;;
#   esac
#
#   status_left=$(echo "$status_left" | sed 's%#{circled_session_name}%#(cut -c3- ~/.tmux/.tmux.conf.amos | sh -s _circled_digit #S)%g')
#   status_right=$(echo "$status_right" | sed 's%#{circled_session_name}%#(cut -c3- ~/.tmux/.tmux.conf.amos | sh -s _circled_digit #S)%g')
#
#   tmux  set -s status-left-length 1000 \; set -s status-left "$status_left" \;\
#         set -s status-right-length 1000 \; set -s status-right "$status_right"
#
#   # -- clock -------------------------------------------------------------
#
#   tmux_conf_theme_clock_colour=${tmux_conf_theme_clock_colour:-'#00afff'} # light blue
#   tmux_conf_theme_clock_style=${tmux_conf_theme_clock_style:-'24'}
#   tmux  set -sw clock-mode-colour "$tmux_conf_theme_clock_colour" \;\
#         set -sw clock-mode-style "$tmux_conf_theme_clock_style"
# }
#
# _apply_configuration() {
#
#   # see https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
#   if command -v reattach-to-user-namespace > /dev/null 2>&1; then
#     default_shell="$(tmux show -gv default-shell)"
#     case "$default_shell" in
#       *fish)
#         tmux set -s default-command "reattach-to-user-namespace -l $default_shell"
#         ;;
#       *sh)
#         tmux set -s default-command "exec $default_shell... 2> /dev/null & reattach-to-user-namespace -l $default_shell"
#         ;;
#     esac
#   fi
#
#   _apply_overrides
#   _apply_theme
#   for name in $(printenv | grep -Eo '^tmux_conf_[^=]+'); do tmux setenv -gu "$name"; done;
# }
#
# "$@"
